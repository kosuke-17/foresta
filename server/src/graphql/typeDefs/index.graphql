type Query {
  """
  全てのユーザー情報を取得.
  """
  getAllUser: [User!]
  """
  ユーザーidに紐づくユーザー情報を取得.
  """
  getUserById(_id: String!): User!
  """
  ユーザーのTodo一覧情報を取得.
  """
  getAllTodoByUser(userId: String): [Todo!]!
  """
  TodoIdに紐づいたTodo情報を取得.
  """
  getTodoById(todoId: String): Todo!
  """
  ユーザーのTodo一覧情報を取得.
  """
  getAllStudyStack(userId: String): [StudyStack!]!
  """
  StudyStackIdに紐づいたStudyStack情報を取得.
  """
  getStudyStackById(studyStackId: String): StudyStack!
  """
  ユーザーIDに紐づくスペックシート情報を取得.
  """
  getSheetByUserId(userId: String): ResponseSpecSheet!
  """
  ユーザーIDに紐づくポートフォリオ情報を取得.
  """
  getPortfolioByUserId(userId: String): ResponsePortfolio!
  """
  スキル取得.
  """
  getAllSkill: [Skill]
  """
  動作環境取得
  """
  getOperationEnvs(_id: String): Skill!
  """
  言語取得
  """
  getLanguages(_id: String): Skill!
  """
  フレームワーク取得
  """
  getFrameworks(_id: String): Skill!
  """
  ライブラリ取得
  """
  getLibraries(_id: String): Skill!
  """
  その他のツール取得
  """
  getOtherTools(_id: String): Skill!
  """
  それぞれのTechを取得.
  """
  getAllTechLeaf: [TechLeaf!]!
  getAllTechBranch: [TechBranch!]!
  getAllTechTree: [TechTree!]!
  getAllTechArea: [TechArea!]!
}

type Mutation {
  """
  ユーザーを追加.
  """
  createUser(user: UserCreateInput!): ResponseUser!
  """
  ユーザーを編集.
  """
  updateUser(user: UserUpdateInput!): ResponseUser!

  """
  ユーザー習得技術を更新.
  """
  updateUserTechLeafs(techLeaf: UserTechLeafUpdateInput!): ResponseUserTechLeaf!
  """
  ユーザーの持つUrlを作成.
  """
  createUserUrls(urlData: UserUrlsCreateInput!): ResponseUserUrls!
  addUserUrls(urlData: UserUrlsAddInput!): ResponseUserUrls!
  removeUserUrls(urlData: UserUrlsRemoveInput!): ResponseUserUrls!

  """
  Todoを追加.
  """
  addTodo(todo: TodoAddInput): ResponseTodo!
  """
  Todoを削除.
  """
  removeTodo(todoId: String): ResponseTodo!
  """
  Todoを更新.
  """
  updateTodo(todo: TodoUpdateInput): ResponseTodo!
  """
  Todo状態をtrueまたはfalse.
  """
  changeTodoStatus(todoId: String): ResponseTodo!
  """
  ユーザーがログイン.
  """
  userLogin(user: UserLoginInput!): ResponseUser!
  """
  ユーザーの学習記録を追加.
  """
  addStudyStack(stack: StudyStackAddInput!): ResponseStudyStack!
  """
  ユーザーの学習記録を削除.
  """
  removeStudyStack(studyStackId: String!): ResponseStudyStack!
  """
  ユーザーの学習記録を更新.
  """
  updateStudyStack(stack: StudyStackUpdateInput!): ResponseStudyStack!
  """
  スペックシート情報を更新.
  """
  updateSpecSheet(specSheet: SpecSheetUpdateInput): ResponseSpecSheet!
  """
  基本情報を更新.
  """
  updateSpecUserInfo(
    specUserInfo: SpecUserInfoUpdateInput!
  ): ResponseSpecUserInfo!
  """
  スキル要約情報を更新.
  """
  updateSpecTechInfo(
    specTechInfo: SpecTechInfoUpdateInput!
  ): ResponseSpecTechInfo!
  """
  開発経験情報を更新.
  """
  updateSpecProject(specProject: SpecProjectUpdateInput!): ResponseSpecProject!
  """
  開発経験情報を追加.
  """
  addSpecProject(specProject: SpecProjectAddInput!): ResponseSpecProject!
  """
  開発経験情報を削除.
  """
  removeSpecProject(specProjectId: String!): ResponseRemove!

  """
  ポートフォリオを作成.
  """
  createPortfolio(portfolio: PortfolioCreateInput!): ResponsePortfolio!
  """
  ポートフォリオを更新.
  """
  updatePortfolio(portfolio: PortfolioUpdateInput!): ResponsePortfolio!
  """
  ポートフォリオを削除.
  """
  removePortfolio(portfolioId: String!): ResponseRemove!

  """
  スペックシートを
  """
  getSpreadSheet(userId: String): Res
  """
  Techを追加.
  """
  createTechLeaf(techLeaf: TechLeafCreateInput!): CreatedTechLeaf!
  createTechBranch(techBranch: TechBranchCreateInput!): CreatedTechBranch!
  createTechTree(techTree: TechTreeCreateInput!): CreatedTechTree!
  createTechArea(techArea: TechAreaCreateInput!): CreatedTechArea!
}

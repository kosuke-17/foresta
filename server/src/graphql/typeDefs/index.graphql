type Query {
  """
  全てのユーザー情報を取得する.
  """
  getAllUser: [User!]
  """
  ユーザーidに紐づくユーザー情報を取得する.
  """
  user(_id: String!): User!
  """
  ユーザーのTodo一覧情報を取得する.
  """
  getAllTodoByUser(userId: String): [Todo!]!
  """
  TodoIdに紐づいたTodo情報を取得する.
  """
  getTodoByTodoId(todoId: String): Todo!
  """
  ユーザーのTodo一覧情報を取得する.
  """
  getAllStudyStackByUserId(userId: String): [StudyStack!]!
  """
  StudyStackIdに紐づいたStudyStack情報を取得する.
  """
  getStudyStackByStudyStackId(studyStackId: String): StudyStack!
  """
  それぞれのTechを取得する
  """
  getAllTechLeaf: [TechLeaf!]!
  getAllTechBranch: [TechBranch!]!
  getAllTechTree: [TechTree!]!
  getAllTechArea: [TechArea!]!
}

type Mutation {
  """
  ユーザーを追加する：引数(ユーザー名、エンジニアタイプ、GithubURL?)
  """
  createUser(user: UserCreateInput!): ResponseUser!

  """
  ユーザー習得技術を更新する：引数(ユーザーID, TechLeafID)
  """
  updateUserTechLeafs(techLeaf: UserTechLeafUpdateInput!): ResponseUserTechLeaf!
  """
  ユーザーの持つUrlを作成する：引数(ユーザーID, TechLeafID)
  """
  createUserUrls(user: UserUrlsCreateInput!): ResponseUserUrls!
  addUserUrls(user: UserUrlsAddInput!): ResponseUserUrls!
  removeUserUrls(user: UserUrlsRemoveInput!): ResponseUserUrls!

  """
  Todoを追加する：引数(タイトル,説明,開始日,終了日,todo状態,ユーザーID)
  """
  addTodo(todo: TodoInput): ResponseTodo!
  """
  Todoを削除する：引数(todoId)
  """
  removeTodo(todoId: String): ResponseTodo!
  """
  Todoを更新する：引数(タイトル,説明,開始日,終了日,todo状態,ユーザーID)
  """
  updateTodo(todo: TodoInput): ResponseTodo!
  """
  Todo状態をtrueにする：引数(todoId)
  """
  chekedTodoStatus(todoId: String): ResponseTodo!
  """
  Todo状態をfalseにする：引数(todoId)
  """
  unChekedTodoStatus(todoId: String): ResponseTodo!
  """
  ユーザーがログインする：引数(ユーザーID, email, password)
  """
  userLogin(user: UserLoginInput!): ResponseUser!
  """
  ユーザーの学習記録を追加する
  """
  addStudyStack(stack: StudyStackAddInput!): ResponseStudyStack!
  """
  ユーザーの学習記録を削除する
  """
  removeStudyStack(studyStackId: String!): ResponseStudyStack!
  """
  ユーザーの学習記録を更新する
  """
  updateStudyStack(stack: StudyStackUpdateInput!): ResponseStudyStack!
  """
  Techを追加する：引数(Leaf名 or Branch名 or Tree名)
  """
  createTechLeaf(techLeaf: TechLeafCreateInput!): CreatedTechLeaf!
  createTechBranch(techBranch: TechBranchCreateInput!): CreatedTechBranch!
  createTechTree(techTree: TechTreeCreateInput!): CreatedTechTree!
  createTechArea(techArea: TechAreaCreateInput!): CreatedTechArea!
}
